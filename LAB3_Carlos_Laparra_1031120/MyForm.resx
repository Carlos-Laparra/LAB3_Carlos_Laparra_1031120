<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>